<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!--加载jdbc配置-->
    <properties resource="application-dev.properties"/>

    <!--已经POM.XML增加依赖-->
    <!-- 数据库驱动:选择你的本地硬盘上面的数据库驱动包-->
    <!--<classPathEntry  location="/Users/timebusker/Downloads/mysql-connector-java-5.1.41.jar"/>-->

    <context id="spring-boot-vue" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!--文档结构不能乱-->
        <!-- "context" 的内容必须匹配 "(property*,plugin*,commentGenerator?,(connectionFactory|jdbcConnection),javaTypeResolver?,javaModelGenerator,sqlMapGenerator?,javaClientGenerator?,table+)"-->

        <!--插件系列-->
        <plugin type="org.mybatis.generator.plugins.ToStringPlugin"/>
        <!--<plugin type="org.mybatis.generator.plugins.EqualsHashCodePlugin"/>-->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>
        <!--继承通用接口类-->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="com.timebusker.common.mybatis.CommonMapper"/>
        </plugin>

        <commentGenerator>
            <property name="suppressDate" value="true"/>
            <property name="suppressAllComments" value="true"/>
            <property name="javaFileEncoding" value="UTF-8"/>
            <property name="javaFormatter" value="org.mybatis.generator.api.dom.DefaultJavaFormatter"/>
            <property name="xmlFormatter" value="org.mybatis.generator.api.dom.DefaultXmlFormatter"/>
            <property name="beginningDelimiter" value="`"/>
            <property name="endingDelimiter" value="`"/>
        </commentGenerator>

        <!--配置数据库连接-->
        <jdbcConnection driverClass="${spring.datasource.driver-class-name}"
                        connectionURL="${spring.datasource.url}"
                        userId="${spring.datasource.username}"
                        password="${spring.datasource.password}">
        </jdbcConnection>

        <!--java数据类型解析定义-->
        <javaTypeResolver>
            <!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer true，把JDBC DECIMAL 和 NUMERIC 类型解析为java.math.BigDecimal -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 生成模型的包名和位置-->
        <javaModelGenerator targetPackage="com.timebusker.model" targetProject="src/main/java">
            <property name="enableSubPackages" value="true"/>
            <property name="trimStrings" value="true"/>
            <!--<property name="rootClass" value="com.timebusker.model.AbstractBaseEntity"/>-->
        </javaModelGenerator>

        <!-- 生成映射文件的包名和位置-->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources">
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!-- 生成DAO的包名和位置-->
        <javaClientGenerator targetPackage="com.timebusker.mapper" targetProject="src/main/java" type="XMLMAPPER">
            <property name="enableSubPackages" value="true"/>
            <property name="rootClass" value="com.timebusker.mapper.AbstractBaseMapper"/>
        </javaClientGenerator>

        <!-- 要生成的表 tableName是数据库中的表名或视图名 domainObjectName是实体类名-->
        <!--表没有主见或者获取不到主键时，只会生成两个方法-->
        <!--模糊匹配使用：%-->
        <table tableName="shop_%">
            <!--不适用字段实际名：使用驼峰规则字段-->
            <property name="useActualColumnNames" value="false"/>
            <!--使用后会不满足驼峰命名规则-->
            <!--<domainObjectRenamingRule searchString="^TbSys" replaceString="Sys"/>-->
        </table>
    </context>
</generatorConfiguration>